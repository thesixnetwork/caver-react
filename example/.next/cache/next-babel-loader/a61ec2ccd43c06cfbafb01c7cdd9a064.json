{"ast":null,"code":"import { InjectedConnector } from '@web3-react/injected-connector';\nconst POLLING_INTERVAL = 12000;\nconst RPC_URLS = {\n  97: process.env.RPC_URL_97,\n  56: process.env.RPC_URL_56\n};\nexport const injected = new InjectedConnector({\n  supportedChainIds: [56, 97]\n}); // export const network = new NetworkConnector({\n//   urls: { 97: RPC_URLS[97], 56: RPC_URLS[56] },\n//   defaultChainId: 97\n// })\n// export const walletconnect = new WalletConnectConnector({\n//   rpc: { 97: RPC_URLS[97], 56: RPC_URLS[56] },\n//   qrcode: true,\n//   pollingInterval: POLLING_INTERVAL\n// })\n// export const walletlink = new WalletLinkConnector({\n//   url: RPC_URLS[97],\n//   appName: 'web3-react example'\n// })\n// export const ledger = new LedgerConnector({ chainId: 97, url: RPC_URLS[97], pollingInterval: POLLING_INTERVAL })\n// export const trezor = new TrezorConnector({\n//   chainId: 97,\n//   url: RPC_URLS[97],\n//   pollingInterval: POLLING_INTERVAL,\n//   manifestEmail: 'dummy@abc.xyz',\n//   manifestAppUrl: 'http://localhost:1234'\n// })\n// export const lattice = new LatticeConnector({\n//   chainId: 97,\n//   appName: 'web3-react',\n//   url: RPC_URLS[97]\n// })\n// export const frame = new FrameConnector({ supportedChainIds: [97] })\n// export const authereum = new AuthereumConnector({ chainId: 97 })\n// export const fortmatic = new FortmaticConnector({ apiKey: process.env.FORTMATIC_API_KEY as string, chainId: 97 })\n// export const magic = new MagicConnector({\n//   apiKey: process.env.MAGIC_API_KEY as string,\n//   chainId: 97,\n//   email: 'hello@example.org'\n// })\n// export const portis = new PortisConnector({ dAppId: process.env.PORTIS_DAPP_ID as string, networks: [97, 56] })\n// export const torus = new TorusConnector({ chainId: 97 })","map":{"version":3,"sources":["/Users/nantanart/git/caverjs-react/example/connectors.ts"],"names":["InjectedConnector","POLLING_INTERVAL","RPC_URLS","process","env","RPC_URL_97","RPC_URL_56","injected","supportedChainIds"],"mappings":"AAAA,SAASA,iBAAT,QAAkC,gCAAlC;AAcA,MAAMC,gBAAgB,GAAG,KAAzB;AACA,MAAMC,QAAuC,GAAG;AAC9C,MAAIC,OAAO,CAACC,GAAR,CAAYC,UAD8B;AAE9C,MAAIF,OAAO,CAACC,GAAR,CAAYE;AAF8B,CAAhD;AAKA,OAAO,MAAMC,QAAQ,GAAG,IAAIP,iBAAJ,CAAsB;AAAEQ,EAAAA,iBAAiB,EAAE,CAAC,EAAD,EAAK,EAAL;AAArB,CAAtB,CAAjB,C,CAEP;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA","sourcesContent":["import { InjectedConnector } from '@web3-react/injected-connector'\nimport { NetworkConnector } from '@web3-react/network-connector'\nimport { WalletConnectConnector } from '@web3-react/walletconnect-connector'\nimport { WalletLinkConnector } from '@web3-react/walletlink-connector'\nimport { LedgerConnector } from '@web3-react/ledger-connector'\nimport { TrezorConnector } from '@web3-react/trezor-connector'\nimport { LatticeConnector } from '@web3-react/lattice-connector'\nimport { FrameConnector } from '@web3-react/frame-connector'\nimport { AuthereumConnector } from '@web3-react/authereum-connector'\nimport { FortmaticConnector } from '@web3-react/fortmatic-connector'\nimport { MagicConnector } from '@web3-react/magic-connector'\nimport { PortisConnector } from '@web3-react/portis-connector'\nimport { TorusConnector } from '@web3-react/torus-connector'\n\nconst POLLING_INTERVAL = 12000\nconst RPC_URLS: { [chainId: number]: string } = {\n  97: process.env.RPC_URL_97 as string,\n  56: process.env.RPC_URL_56 as string\n}\n\nexport const injected = new InjectedConnector({ supportedChainIds: [56, 97] })\n\n// export const network = new NetworkConnector({\n//   urls: { 97: RPC_URLS[97], 56: RPC_URLS[56] },\n//   defaultChainId: 97\n// })\n\n// export const walletconnect = new WalletConnectConnector({\n//   rpc: { 97: RPC_URLS[97], 56: RPC_URLS[56] },\n//   qrcode: true,\n//   pollingInterval: POLLING_INTERVAL\n// })\n\n// export const walletlink = new WalletLinkConnector({\n//   url: RPC_URLS[97],\n//   appName: 'web3-react example'\n// })\n\n// export const ledger = new LedgerConnector({ chainId: 97, url: RPC_URLS[97], pollingInterval: POLLING_INTERVAL })\n\n// export const trezor = new TrezorConnector({\n//   chainId: 97,\n//   url: RPC_URLS[97],\n//   pollingInterval: POLLING_INTERVAL,\n//   manifestEmail: 'dummy@abc.xyz',\n//   manifestAppUrl: 'http://localhost:1234'\n// })\n\n// export const lattice = new LatticeConnector({\n//   chainId: 97,\n//   appName: 'web3-react',\n//   url: RPC_URLS[97]\n// })\n\n// export const frame = new FrameConnector({ supportedChainIds: [97] })\n\n// export const authereum = new AuthereumConnector({ chainId: 97 })\n\n// export const fortmatic = new FortmaticConnector({ apiKey: process.env.FORTMATIC_API_KEY as string, chainId: 97 })\n\n// export const magic = new MagicConnector({\n//   apiKey: process.env.MAGIC_API_KEY as string,\n//   chainId: 97,\n//   email: 'hello@example.org'\n// })\n\n// export const portis = new PortisConnector({ dAppId: process.env.PORTIS_DAPP_ID as string, networks: [97, 56] })\n\n// export const torus = new TorusConnector({ chainId: 97 })\n"]},"metadata":{},"sourceType":"module"}