{"ast":null,"code":"import { InjectedConnector } from 'caverjs-react-injected-connector';\nimport { NetworkConnector } from 'caverjs-react-network-connector';\nvar POLLING_INTERVAL = 12000;\nvar RPC_URLS = {\n  8217: process.env.RPC_URL_8217,\n  1001: process.env.RPC_URL_1001\n};\nexport var injected = new InjectedConnector({\n  supportedChainIds: [8217, 1001]\n});\nexport var network = new NetworkConnector({\n  urls: {\n    8217: RPC_URLS[8217],\n    1001: RPC_URLS[1001]\n  },\n  defaultChainId: 1001\n}); // export const walletconnect = new WalletConnectConnector({\n//   rpc: { 97: RPC_URLS[97], 56: RPC_URLS[56] },\n//   qrcode: true,\n//   pollingInterval: POLLING_INTERVAL\n// })\n// export const walletlink = new WalletLinkConnector({\n//   url: RPC_URLS[97],\n//   appName: 'web3-react example'\n// })\n// export const ledger = new LedgerConnector({ chainId: 97, url: RPC_URLS[97], pollingInterval: POLLING_INTERVAL })\n// export const trezor = new TrezorConnector({\n//   chainId: 97,\n//   url: RPC_URLS[97],\n//   pollingInterval: POLLING_INTERVAL,\n//   manifestEmail: 'dummy@abc.xyz',\n//   manifestAppUrl: 'http://localhost:1234'\n// })\n// export const lattice = new LatticeConnector({\n//   chainId: 97,\n//   appName: 'web3-react',\n//   url: RPC_URLS[97]\n// })\n// export const frame = new FrameConnector({ supportedChainIds: [97] })\n// export const authereum = new AuthereumConnector({ chainId: 97 })\n// export const fortmatic = new FortmaticConnector({ apiKey: process.env.FORTMATIC_API_KEY as string, chainId: 97 })\n// export const magic = new MagicConnector({\n//   apiKey: process.env.MAGIC_API_KEY as string,\n//   chainId: 97,\n//   email: 'hello@example.org'\n// })\n// export const portis = new PortisConnector({ dAppId: process.env.PORTIS_DAPP_ID as string, networks: [97, 56] })\n// export const torus = new TorusConnector({ chainId: 97 })","map":{"version":3,"sources":["/Users/nantanart/git/caverjs-react/example/connectors.ts"],"names":["InjectedConnector","NetworkConnector","POLLING_INTERVAL","RPC_URLS","process","env","RPC_URL_8217","RPC_URL_1001","injected","supportedChainIds","network","urls","defaultChainId"],"mappings":"AAAA,SAASA,iBAAT,QAAkC,kCAAlC;AACA,SAASC,gBAAT,QAAiC,iCAAjC;AAEA,IAAMC,gBAAgB,GAAG,KAAzB;AACA,IAAMC,QAAuC,GAAG;AAC9C,QAAMC,OAAO,CAACC,GAAR,CAAYC,YAD4B;AAE9C,QAAMF,OAAO,CAACC,GAAR,CAAYE;AAF4B,CAAhD;AAKA,OAAO,IAAMC,QAAQ,GAAG,IAAIR,iBAAJ,CAAsB;AAAES,EAAAA,iBAAiB,EAAE,CAAC,IAAD,EAAO,IAAP;AAArB,CAAtB,CAAjB;AAEP,OAAO,IAAMC,OAAO,GAAG,IAAIT,gBAAJ,CAAqB;AAC1CU,EAAAA,IAAI,EAAE;AAAE,UAAMR,QAAQ,CAAC,IAAD,CAAhB;AAAwB,UAAMA,QAAQ,CAAC,IAAD;AAAtC,GADoC;AAE1CS,EAAAA,cAAc,EAAE;AAF0B,CAArB,CAAhB,C,CAKP;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA","sourcesContent":["import { InjectedConnector } from 'caverjs-react-injected-connector'\nimport { NetworkConnector } from 'caverjs-react-network-connector'\n\nconst POLLING_INTERVAL = 12000\nconst RPC_URLS: { [chainId: number]: string } = {\n  8217: process.env.RPC_URL_8217 as string,\n  1001: process.env.RPC_URL_1001 as string\n}\n\nexport const injected = new InjectedConnector({ supportedChainIds: [8217, 1001] })\n\nexport const network = new NetworkConnector({\n  urls: { 8217: RPC_URLS[8217], 1001: RPC_URLS[1001] },\n  defaultChainId: 1001\n})\n\n// export const walletconnect = new WalletConnectConnector({\n//   rpc: { 97: RPC_URLS[97], 56: RPC_URLS[56] },\n//   qrcode: true,\n//   pollingInterval: POLLING_INTERVAL\n// })\n\n// export const walletlink = new WalletLinkConnector({\n//   url: RPC_URLS[97],\n//   appName: 'web3-react example'\n// })\n\n// export const ledger = new LedgerConnector({ chainId: 97, url: RPC_URLS[97], pollingInterval: POLLING_INTERVAL })\n\n// export const trezor = new TrezorConnector({\n//   chainId: 97,\n//   url: RPC_URLS[97],\n//   pollingInterval: POLLING_INTERVAL,\n//   manifestEmail: 'dummy@abc.xyz',\n//   manifestAppUrl: 'http://localhost:1234'\n// })\n\n// export const lattice = new LatticeConnector({\n//   chainId: 97,\n//   appName: 'web3-react',\n//   url: RPC_URLS[97]\n// })\n\n// export const frame = new FrameConnector({ supportedChainIds: [97] })\n\n// export const authereum = new AuthereumConnector({ chainId: 97 })\n\n// export const fortmatic = new FortmaticConnector({ apiKey: process.env.FORTMATIC_API_KEY as string, chainId: 97 })\n\n// export const magic = new MagicConnector({\n//   apiKey: process.env.MAGIC_API_KEY as string,\n//   chainId: 97,\n//   email: 'hello@example.org'\n// })\n\n// export const portis = new PortisConnector({ dAppId: process.env.PORTIS_DAPP_ID as string, networks: [97, 56] })\n\n// export const torus = new TorusConnector({ chainId: 97 })\n"]},"metadata":{},"sourceType":"module"}